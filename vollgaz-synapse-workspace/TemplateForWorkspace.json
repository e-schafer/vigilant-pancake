{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Nom de l'espace de travail",
			"defaultValue": "vollgaz-synapse-workspace"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Chaîne sécurisée pour « accountKey » de « AzureDataLakeStorage1 »"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://vollgazsynapse.dfs.core.windows.net/"
		},
		"vdl_parking_luxembourg_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.vdl.lu/fr/parking/data.json"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyDataParking')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyParkingData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "vollgaz-synapse-azdl/raw/parking_luxembourg/parking_lux.json"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "createdAt",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureDataLakeStorage1",
										"type": "LinkedServiceReference"
									},
									"path": "logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "['id']"
										},
										"sink": {
											"path": "$['id']"
										}
									},
									{
										"source": {
											"path": "['title']"
										},
										"sink": {
											"path": "$['title']"
										}
									},
									{
										"source": {
											"path": "['total']"
										},
										"sink": {
											"path": "$['total']"
										}
									},
									{
										"source": {
											"path": "['actuel']"
										},
										"sink": {
											"path": "$['actuel']"
										}
									},
									{
										"source": {
											"path": "['tendance']"
										},
										"sink": {
											"path": "$['tendance']"
										}
									},
									{
										"source": {
											"path": "['ouvert']"
										},
										"sink": {
											"path": "$['ouvert']"
										}
									},
									{
										"source": {
											"path": "['complet']"
										},
										"sink": {
											"path": "$['complet']"
										}
									},
									{
										"source": {
											"path": "['coords']['latitude']"
										},
										"sink": {
											"path": "coord_latitude"
										}
									},
									{
										"source": {
											"path": "['coords']['longitude']"
										},
										"sink": {
											"path": "coord_longitude"
										}
									},
									{
										"source": {
											"path": "$['createdAt']"
										},
										"sink": {
											"path": "createdAt"
										}
									}
								],
								"collectionReference": "$['parking']"
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yj1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yj1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-14T12:31:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_yj1')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_yj1')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_yj1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('data_parking_luxembourg', '_', utcNow(),'.json')",
							"type": "Expression"
						},
						"folderPath": "raw/parking_luxembourg",
						"fileSystem": "vollgaz-synapse-azdl"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_yj1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vdl_parking_luxembourg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"parking": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"title": {
										"type": "string"
									},
									"total": {
										"type": "integer"
									},
									"actuel": {
										"type": "integer"
									},
									"tendance": {
										"type": "integer"
									},
									"ouvert": {
										"type": "integer"
									},
									"complet": {
										"type": "integer"
									},
									"coords": {
										"type": "object",
										"properties": {
											"latitude": {
												"type": "number"
											},
											"longitude": {
												"type": "number"
											}
										}
									}
								}
							}
						},
						"neighborhood": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"total": {
										"type": "integer"
									},
									"tendance": {
										"type": "integer"
									},
									"actuel": {
										"type": "integer"
									},
									"tendance_average": {
										"type": "integer"
									},
									"slug": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/vdl_parking_luxembourg')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vdl_parking_luxembourg')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('vdl_parking_luxembourg_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger 1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyDataParking",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2023-01-19T07:33:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/CopyDataParking')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/vollgazspark')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 0,
					"minNodeCount": 0
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "westeurope"
		}
	]
}