{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vdl_parking_json",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "parkingsParquet",
						"type": "DatasetReference"
					},
					"name": "parkingsParquetSink"
				},
				{
					"dataset": {
						"referenceName": "neighborhoodParquet",
						"type": "DatasetReference"
					},
					"name": "neighborhoodParquetSink"
				}
			],
			"transformations": [
				{
					"name": "flattenParkings"
				},
				{
					"name": "flattenNeighborhoods"
				}
			],
			"scriptLines": [
				"source(output(",
				"          parking as (id as string, title as string, total as integer, actuel as integer, tendance as integer, ouvert as integer, complet as integer, coords as (latitude as double, longitude as double))[],",
				"          neighborhood as (total as integer, tendance as integer, actuel as integer, tendance_average as double, slug as string, title as string)[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source1 foldDown(unroll(parking),",
				"     mapColumn(",
				"          id = parking.id,",
				"          title = parking.title,",
				"          total = parking.total,",
				"          actuel = parking.actuel,",
				"          tendance = parking.tendance,",
				"          ouvert = parking.ouvert,",
				"          complet = parking.complet,",
				"          coords = parking.coords",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenParkings",
				"source1 foldDown(unroll(neighborhood),",
				"     mapColumn(",
				"          total = neighborhood.total,",
				"          tendance = neighborhood.tendance,",
				"          actuel = neighborhood.actuel,",
				"          tendance_average = neighborhood.tendance_average,",
				"          slug = neighborhood.slug,",
				"          title = neighborhood.title",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenNeighborhoods",
				"flattenParkings sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> parkingsParquetSink",
				"flattenNeighborhoods sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> neighborhoodParquetSink"
			]
		}
	}
}